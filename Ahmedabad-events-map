import React, { useState } from "react";
import { MapContainer, TileLayer, Marker, Popup, useMapEvents } from "react-leaflet";
import "leaflet/dist/leaflet.css";
import L from "leaflet";

const defaultIcon = new L.Icon({
  iconUrl: "https://unpkg.com/leaflet@1.9.3/dist/images/marker-icon.png",
  iconSize: [25, 41],
  iconAnchor: [12, 41],
  popupAnchor: [1, -34],
});

function LocationMarker({ onSelect }) {
  const [position, setPosition] = useState(null);

  useMapEvents({
    click(e) {
      setPosition(e.latlng);
      onSelect(e.latlng);
    },
  });

  return position ? <Marker position={position} icon={defaultIcon} /> : null;
}

export default function AhmedabadMapEvents() {
  const [events, setEvents] = useState([
    {
      id: 1,
      title: "Ahmedabad Food Festival",
      description: "Taste the best local cuisine.",
      position: [23.0225, 72.5714],
      date: "2025-04-15",
    },
    {
      id: 2,
      title: "Kite Flying Workshop",
      description: "Learn how to fly traditional kites!",
      position: [23.0300, 72.5800],
      date: "2025-04-18",
    },
  ]);

  const [formData, setFormData] = useState({ title: "", description: "", date: "" });
  const [selectedPosition, setSelectedPosition] = useState(null);

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!selectedPosition) return alert("Please select a location on the map.");

    const newEvent = {
      id: events.length + 1,
      title: formData.title,
      description: formData.description,
      date: formData.date,
      position: [selectedPosition.lat, selectedPosition.lng],
    };

    setEvents([...events, newEvent]);
    setFormData({ title: "", description: "", date: "" });
    setSelectedPosition(null);
  };

  return (
    <div className="h-screen flex flex-col md:flex-row">
      <div className="md:w-1/3 p-4 bg-gray-50">
        <h2 className="text-xl font-semibold mb-4">Submit New Event</h2>
        <form onSubmit={handleSubmit} className="space-y-4">
          <input
            type="text"
            placeholder="Event Title"
            className="w-full p-2 border rounded"
            value={formData.title}
            onChange={(e) => setFormData({ ...formData, title: e.target.value })}
            required
          />
          <textarea
            placeholder="Event Description"
            className="w-full p-2 border rounded"
            value={formData.description}
            onChange={(e) => setFormData({ ...formData, description: e.target.value })}
            required
          />
          <input
            type="date"
            className="w-full p-2 border rounded"
            value={formData.date}
            onChange={(e) => setFormData({ ...formData, date: e.target.value })}
            required
          />
          <p className="text-sm text-gray-500">Click on the map to select a location</p>
          <button
            type="submit"
            className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
          >
            Submit Event
          </button>
        </form>
      </div>

      <div className="md:w-2/3 h-full">
        <MapContainer
          center={[23.0225, 72.5714]}
          zoom={13}
          scrollWheelZoom={true}
          className="h-full w-full"
        >
          <TileLayer
            url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
            attribution="&copy; <a href='http://osm.org/copyright'>OpenStreetMap</a> contributors"
          />

          {events.map((event) => (
            <Marker
              key={event.id}
              position={event.position}
              icon={defaultIcon}
            >
              <Popup>
                <div>
                  <h2 className="font-bold text-lg">{event.title}</h2>
                  <p className="text-sm">{event.description}</p>
                  <p className="text-sm text-gray-500">Date: {event.date}</p>
                </div>
              </Popup>
            </Marker>
          ))}

          <LocationMarker onSelect={setSelectedPosition} />
        </MapContainer>
      </div>
    </div>
  );
}
